-- 1. What is the total amount each customer spent at the restaurant?

select sum(m.price) as total_sales, s.customer_id from menu m join sales s
on m.product_id = s.product_id
group by s.customer_id ;



import org.apache.spark.sql.functions._
import org.apache.spark.sql.types.IntegerType

val sales = Seq(("A", "2021-01-01", "1"),("A", "2021-01-01", "2"),("A", "2021-01-07", "2"),("A", "2021-01-10", "3"),("A", "2021-01-11", "3"),("A", "2021-01-11", "3"),("B", "2021-01-01", "2"),("B", "2021-01-02", "2"),("B", "2021-01-04", "1"),("B", "2021-01-11", "1"),("B", "2021-01-16", "3"),("B", "2021-02-01", "3"),("C", "2021-01-01", "3"),("C", "2021-01-01", "3"),("C", "2021-01-07", "3")).toDF("customer_id","order_date","product_id")
val menu = Seq( ("1", "sushi", "10"),("2", "curry", "15"), ("3", "ramen", "12")).toDF("product_id","product_name", "price").withColumn("price",col("price").cast(IntegerType))
val members = Seq(("A", "2021-01-07"), ("B", "2021-01-09")).toDF("customer_id","join_date")

menu.join(sales, menu("product_id") ===  sales("product_id")).groupBy("customer_id").sum("price").show(false)


/*
# total_sales, customer_id
76, A
74, B
36, C
*/
