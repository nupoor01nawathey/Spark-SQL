-- 2. How many days has each customer visited the restaurant?
-- assumption : one customer can visit multiple times a day so used distinct

select count(distinct(order_date)) as visit_each_day, customer_id from sales group by customer_id;


import org.apache.spark.sql.functions._
import org.apache.spark.sql.types.IntegerType

val sales = Seq(("A", "2021-01-01", "1"),("A", "2021-01-01", "2"),("A", "2021-01-07", "2"),("A", "2021-01-10", "3"),("A", "2021-01-11", "3"),("A", "2021-01-11", "3"),("B", "2021-01-01", "2"),("B", "2021-01-02", "2"),("B", "2021-01-04", "1"),("B", "2021-01-11", "1"),("B", "2021-01-16", "3"),("B", "2021-02-01", "3"),("C", "2021-01-01", "3"),("C", "2021-01-01", "3"),("C", "2021-01-07", "3")).toDF("customer_id","order_date","product_id")
val menu = Seq( ("1", "sushi", "10"),("2", "curry", "15"), ("3", "ramen", "12")).toDF("product_id","product_name", "price").withColumn("price",col("price").cast(IntegerType))
val members = Seq(("A", "2021-01-07"), ("B", "2021-01-09")).toDF("customer_id","join_date")


sales.groupBy("customer_id").agg(countDistinct("order_date")).show(false)

/*
# visit_each_day, customer_id
2, C
4, A
6, B
*/
